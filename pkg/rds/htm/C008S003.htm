<html><head><title>[RDS] 8.3 Lists and Matrices</title></head>
<body text="#000000" bgcolor="#ffffff">
[<a href = "C008S000.htm">Up</a>] [<a href ="C008S002.htm">Previous</a>] [<a href ="C008S004.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<h1>8.3 Lists and Matrices</h1><p>
<p>
<a name = "SSEC1"></a>
<li><code>IsListOfIntegers( </code><var>list</var><code> ) P</code>
<p>
<code>IsListOfIntegers( </code><var>list</var><code> )</code> returns <code>IsSubset(Integers, </code><var>list</var><code> )</code> if <var>list</var>
is a dense list and <code>false</code> otherwise.
<p>
<a name = "SSEC2"></a>
<li><code>List2Tuples( </code><var>list</var><code>, </code><var>int</var><code> ) O</code>
<p>
If <code>Size( </code><var>list</var><code> )</code> is divisible by <var>int</var>, <code>List2Tuples( </code><var>list</var><code>,</code><var>int</var><code>)</code>
returns a list <var>list2</var> of size <var>int</var> such that 
<code>Concatenation( </code><var>list2</var><code> )= </code><var>list</var><code></code> and every element of <var>list2</var> has the 
same size.
<p>
<pre>
gap&gt; List2Tuples([1..6],2);
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
</pre>
<p>
<a name = "SSEC3"></a>
<li><code>MatTimesTransMat( </code><var>mat</var><code> ) O</code>
<p>
does the same as <code></code><var>mat</var><code>*TransposedMat( </code><var>mat</var><code> )</code> but uses slightly less 
space and time for large matrices.
<p>
<a name = "SSEC4"></a>
<li><code>PartitionByFunctionNF( </code><var>list</var><code>, </code><var>f</var><code> ) O</code>
<p>
<code>PartitionByFunctionNF( </code><var>list</var><code>, </code><var>f</var><code> )</code> partitions the list <var>list</var> 
according to the values of the function <var>f</var> defined on <var>list</var>. 
If <var>f</var> returns <code>fail</code> for some element of <var>list</var>, 
<code>PartitionByFunctionNF( </code><var>list</var><code>, </code><var>f</var><code> )</code> enters a break loop. 
Leaving the break loop with 'return;' is safe because 
<code>PartitionByFunctionNF</code> treats <code>fail</code> as all other results of <var>f</var>.
<p>
<a name = "SSEC5"></a>
<li><code>PartitionByFunction( </code><var>list</var><code>, </code><var>f</var><code> ) O</code>
<p>
<code>PartitionByFunction( </code><var>list</var><code>, </code><var>f</var><code> )</code> partitions the list <var>list</var> 
according to the values of the function <var>f</var> defined on <var>list</var>. 
All elements, for which <var>f</var> returns <code>fail</code> are omitted, so 
<code>PartitionByFunction</code> does not necessarily return a partition.
If <code>InfoLevel(InfoRDS)</code>indexInfoRDS@ttInfoRDS is at least 2, the number of 
elements for which <var>f</var> returns <code>fail</code> is shown 
(if <code>fail</code> is returned at all).
<p>
<pre>

gap&gt; PartitionByFunctionNF([-1..5],x-&gt;x^2);
[ [ 0 ], [ -1, 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ] ]
gap&gt; test:=function(x) 
&gt; if x&gt;0 then return Sqrt(x);
&gt;  else return fail;
&gt; fi;
&gt; end;
function( x ) ... end
gap&gt; PartitionByFunction([-1..5],test);  
[ [ 1 ], [ 4 ], [ 5 ], [ 2 ], [ 3 ] ]
gap&gt; SetInfoLevel(InfoRDS,2);
gap&gt; PartitionByFunction([-1..5],test);  
#I  -2-
[ [ 1 ], [ 4 ], [ 5 ], [ 2 ], [ 3 ] ]
gap&gt; PartitionByFunctionNF([-1..5],test);
Error, function returned &lt;fail&gt; called from
...
brk&gt; return;
[ [ 1 ], [ 4 ], [ 5 ], [ 2 ], [ 3 ], [ -1, 0 ] ]
</pre>
<p>
<p>
[<a href = "C008S000.htm">Up</a>] [<a href ="C008S002.htm">Previous</a>] [<a href ="C008S004.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>RDS manual<br>November 2006
</address></body></html>